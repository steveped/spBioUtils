% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_gs_network.R
\name{plot_gs_network}
\alias{plot_gs_network}
\title{Visualise a network from a tidygraph object}
\usage{
plot_gs_network(
  tg,
  layout = "fr",
  up_col = "#FF000033",
  down_col = "#0000FF33",
  palette = "Dark2",
  palette_type = c("RColorBrewer", "grDevices"),
  gs_label_size = 3,
  gs_point_size = 10,
  gs_shape = 21,
  gs_label_repel = TRUE,
  gs_label_padding = unit(0.15, "lines"),
  gs_text_col = "black",
  gene_label_repel = TRUE,
  gene_shape = 21,
  gene_alpha = 0.7,
  gene_text_col = "black",
  stroke = 0.5,
  scale_size_trans = "sqrt",
  scale_size_range = c(1, 3.5),
  na_col = "grey80"
)
}
\arguments{
\item{tg}{The gene-set network as a tidygraph, as output by make_gs_network}

\item{layout}{The layout algorithm to apply}

\item{up_col}{The colour to label up-regulated genes}

\item{down_col}{The colour to label down-regulated genes}

\item{palette}{The name of the palette to use. Can be drawn from those
provided in RColorBrewer::brewer.pal, or grDevices::hcl.colors}

\item{palette_type}{Choose either RColorBrewer or grDevices palettes}

\item{gs_label_size}{Size of gene-set labels}

\item{gs_point_size}{Size of gene-set nodes}

\item{gs_shape}{Shape to use for gene-set nodes}

\item{gs_label_repel}{logical(1). Should the gene-set labels repel away from
the points}

\item{gs_label_padding}{Set the padding within each label around the text}

\item{gs_text_col}{Text colour for node labels}

\item{gene_label_repel}{logical(1). Should the gene labels repel away from
the points}

\item{gene_shape}{Shape to use for gene-level nodes}

\item{gene_alpha}{Transparency of gene-level nodes}

\item{gene_text_col}{Colour of the gene names}

\item{stroke}{Controls thickness of the coloured region inside any point
with a fill attribute}

\item{scale_size_trans}{Passed to
scale_size_continuous(trans = scale_size_trans)}

\item{scale_size_range}{Passed to
scale_size_continuous(range = scale_size_range)}

\item{na_col}{The colour for any lines and points with missing values}
}
\value{
A ggplot2 object
}
\description{
Visualise a gene-expression network
}
\details{
Draws a network graph of genes connected to gene-sets. By default,
up-regulated genes will be coloured red, whlst down-regulated genes will be
coloured blue. This requires a column labelled 'logFC' to be included in the
nodes component of the tidygraph.

It is also assumed that an \code{NA} value for logFC will be provided for the
gene-set nodes. This is used to generate colours for each node, with edges
from each node being drawn in the same colours.

Available palettes for nodes can be found using
\code{rownames(RColorBrewer::brewer.pal.info)} for the RColorBrewer palettes,
or \code{hcl.pals()} for the grDevices palettes
}
\examples{
set.seed(100)
geneSets <- list(
  a = as.character(1:3), b = as.character(3:5), c = as.character((1:3)*2)
)
topTable <- tibble(
  gene_name = as.character(1:6), PValue = runif(6), logFC = runif(6, -3, 3)
)
tg <- make_gs_network(gene_sets = geneSets, top_table = topTable)
plot_gs_network(tg)
## Plots can be easily customised
suppressWarnings(
  plot_gs_network(tg, gs_shape = NA, gs_label_repel = FALSE,
  gs_label_size = 10, gs_label_padding = unit(0.5, "line")
  )
)

}
