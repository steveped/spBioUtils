% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_gs_network.R
\name{make_gs_network}
\alias{make_gs_network}
\title{Form a tidygraph object}
\usage{
make_gs_network(gene_sets, top_table, .by = c(label = "gene_name"))
}
\arguments{
\item{gene_sets}{A list of gene-sets as described in the details section}

\item{top_table}{An optional topTable as output by a function such as
limma::topTable(), or edgeR::topTags()$table}

\item{.by}{If providing the topTable, this will be
passed to dplyr::left_join()}
}
\value{
A tbl_graph
}
\description{
Form a tidygraph from a list of genesets
}
\details{
Taking a list of genesets as the primary input form a network. Names of each
list element are assumed to be the names of genesets, with the values within
each element assumed to be gene identifiers. Choosing actual gene names may
be the most useful option.

If provided, the topTable will be joined onto the nodes allowing all columns
to be used for modifying the final plot.
The most useful columns may be either logFC or the PValue.

By default, all nodes (i.e. gene-sets and gene names) will be contained in a
column named 'label'. Setting the correct column from the topTable to join
on can be performed using the .by argument.

It should also be noted that these networks become very cumbersome, very
quickly and as such, supplying a relatively small number (e.g. 10) of nodes
(i.e. genesets) may be the most viable approach
}
\examples{
set.seed(100)
geneSets <- list(
  a = as.character(1:3), b = as.character(3:5), c = as.character((1:3)*2)
  )
topTable <- tibble(
  gene_name = as.character(1:6), PValue = runif(6), logFC = runif(6, -3, 3)
  )
tg <- make_gs_network(gene_sets = geneSets, top_table = topTable)

}
